@using Data.Modelos
@using Data

<h3>@Socio.Nombres</h3>

<EditForm Model="Socio" OnValidSubmit="Success">
    <DataAnnotationsValidator />
    <MatTextField @bind-Value="@Socio.Nombres" Label="Nombre"></MatTextField>
    <ValidationMessage For="@(() => Socio.Nombres)" />
    <MatTextField @bind-Value="@Socio.Apellidos" Label="Apellidos"></MatTextField>
    <ValidationMessage For="@(() => Socio.Apellidos)" />
    <MatTextField Type="email" @bind-Value="@Socio.Correo" Label="Correo"></MatTextField>
    <ValidationMessage For="@(() => Socio.Correo)" />
    <MatTextField Type="number" @bind-Value="@Socio.Telefono" Label="Teléfono"></MatTextField>
    <ValidationMessage For="@(() => Socio.Telefono)" />
    <MatDatePicker @bind-Value="@Socio.FechaNacimiento" Label="Fecha de Nacimiento"></MatDatePicker>
    <ValidationMessage For="@(() => Socio.FechaNacimiento)" />
    <MatTextField Type="number" @bind-Value="@Socio.SaldoTotal" Label="Deposito Inicial" hidden="@IsShow"></MatTextField>
    <ValidationMessage For="@(() => Socio.SaldoTotal)" />

    <MatButton Raised="true" Icon="save" @onclick="Submit">Guardar</MatButton>
    <MatButton Raised="true" Icon="undo" @onclick="Regresar">Regresar</MatButton>
</EditForm>


@code {

    [Inject] IJSRuntime JS { get; set; }
    [Inject] ISociosService SociosService { get; set; }
    [Parameter] public Socio Socio { get; set; }
    [Parameter] public int TipoAccion { get; set; }
    [Parameter] public EventCallback<int> onSubmit { get; set; }
    [Parameter] public bool IsShow { get; set; }
    public int index;


    private async Task Submit()
    {
        if(TipoAccion == 1)
        {
            var response = await SociosService.FormSocio(Socio.Id, Socio);
            if (response)
            {

                await JS.InvokeAsync<object>("alert", "Edición Exitosa");
                await onSubmit.InvokeAsync(1);
            }
        }
        else if (TipoAccion == 2)
        {
            var response = await SociosService.PostSocio(Socio);
            if (response)
            {
                await JS.InvokeAsync<object>("alert", "Socio dado de alta de forma exitosa");
                await onSubmit.InvokeAsync(1);
            }
            else if(index == 1)
            {
                await JS.InvokeAsync<object>("alert", "El deposito inicial debe ser de al menos 1000 pesos");
            }
        }

    }
    private async Task Regresar()
    {
        await onSubmit.InvokeAsync(1);
    }
    async Task Success()
    {
        index = 1;
    }

}
